import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,a as n}from"./app-CFFpmDzR.js";const l="/assets/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%99%AE%E9%80%9A%E5%AD%97%E7%AC%A6%E5%8C%B9%E9%85%8D-zy9K9wwf.png",e="/assets/%E9%80%9A%E9%85%8D%E7%AC%A6-C84_H_oj.png",t="/assets/%E5%8C%B9%E9%85%8D%E5%AD%97%E7%AC%A6%E4%BB%BB%E6%84%8F%E6%AC%A1-DxEd3y74.png",h="/assets/%E5%8F%B7%E7%9A%84%E4%BD%BF%E7%94%A8-B_wG9o7y.png",p="/assets/%E9%87%8D%E5%A4%8D%E5%8C%B9%E9%85%8D%E5%A4%9A%E6%AC%A1-CkGRnMFv.png",k="/assets/%E9%87%8D%E5%A4%8D%E5%8C%B9%E9%85%8D1%E6%AC%A1%E6%88%960%E6%AC%A1-qqaRYgdm.png",d="/assets/%E6%8C%87%E5%AE%9A%E5%8C%B9%E9%85%8D%E6%AC%A1%E6%95%B0-C_2noy0B.png",r="/assets/%E5%8C%B9%E9%85%8D%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E7%9A%84%E5%85%B6%E4%B8%AD%E4%B9%8B%E4%B8%80-C4t4bybD.png",c={},g=n(`<h3 id="_1-正则表达式的作用" tabindex="-1"><a class="header-anchor" href="#_1-正则表达式的作用"><span>1.正则表达式的作用</span></a></h3><h5 id="案例演示" tabindex="-1"><a class="header-anchor" href="#案例演示"><span>案例演示</span></a></h5><p>先给大家看一个例子，在以下文本中存储了一些职位信息：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Python3 高级开发工程师 上海互教教育科技有限公司上海-浦东新区2万/月02-18满员</span></span>
<span class="line"><span>测试开发工程师（C++/python） 上海墨鹍数码科技有限公司上海-浦东新区2.5万/每月02-18未满员</span></span>
<span class="line"><span>Python3 开发工程师 上海德拓信息技术股份有限公司上海-徐汇区1.3万/每月02-18剩余11人</span></span>
<span class="line"><span>测试开发工程师（Python） 赫里普（上海）信息科技有限公司上海-浦东新区1.1万/每月02-18剩余5人</span></span>
<span class="line"><span>Python高级开发工程师 上海行动教育科技股份有限公司上海-闵行区2.8万/月02-18剩余255人</span></span>
<span class="line"><span>python开发工程师 上海优似腾软件开发有限公司上海-浦东新区2.5万/每月02-18满员</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将文本中的薪资数据提取出来，只要包含数字就可以。</p><blockquote><p>代码实现</p></blockquote><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Python3 高级开发工程师 上海互教教育科技有限公司上海-浦东新区2万/月02-18满员</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">测试开发工程师（C++/python） 上海墨鹍数码科技有限公司上海-浦东新区2.5万/每月02-18未满员</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Python3 开发工程师 上海德拓信息技术股份有限公司上海-徐汇区1.3万/每月02-18剩余11人</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">测试开发工程师（Python） 赫里普（上海）信息科技有限公司上海-浦东新区1.1万/每月02-18剩余5人</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Python高级开发工程师 上海行动教育科技股份有限公司上海-闵行区2.8万/月02-18剩余255人</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">python开发工程师 上海优似腾软件开发有限公司上海-浦东新区2.5万/每月02-18满员</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> temp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">findall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">[</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">]+</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">万/每</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">{0,1}</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">月&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, content):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(temp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过以上代码就可以轻松的将文本中的数字提取出来，在<code>find_all</code>方法中的字符串其实就是正则表达式。观察当前方法返回的数据我们发现是一个列表。</p><h3 id="_2-正则表达式在线验证工具" tabindex="-1"><a class="header-anchor" href="#_2-正则表达式在线验证工具"><span>2.正则表达式在线验证工具</span></a></h3><p>工具链接地址：https://regexr-cn.com</p><p>在这个工具中我们可以快速验证自己编写的正则表达式是否存在语法错误。</p><h3 id="_3-常见语法" tabindex="-1"><a class="header-anchor" href="#_3-常见语法"><span>3.常见语法</span></a></h3><h5 id="普通字符匹配" tabindex="-1"><a class="header-anchor" href="#普通字符匹配"><span>普通字符匹配</span></a></h5><p>可以在正则表达式中直接输入我们想要匹配的字符，如图所示：</p><figure><img src="`+l+`" alt="正则表达式普通字符匹配" tabindex="0" loading="lazy"><figcaption>正则表达式普通字符匹配</figcaption></figure><p>当然直接查询汉字也是可以的。但是有些特殊字符不能直接匹配，这些特殊字符有专业术语：元字符。</p><p>元字符具有特殊含义，如下所示：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>. * + ? \\ [] ^ $ {} | ()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="通配符" tabindex="-1"><a class="header-anchor" href="#通配符"><span>通配符 - <code>.</code></span></a></h5><p>在以下文本中选出所有的颜色信息：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>苹果是绿色的</span></span>
<span class="line"><span>橙子是橙色的</span></span>
<span class="line"><span>香蕉是黄色的</span></span>
<span class="line"><span>乌鸦是黑色的</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在文本中找到以<code>色</code>结尾，并且包括前面一个字符的信息，那么正则表达式就可以写成：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>.色</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当前<code>.</code>代表任意字符，但是字符个数只有一个。<code>色</code>这个汉字代表以这个汉字结尾。</p><figure><img src="`+e+`" alt="通配符" tabindex="0" loading="lazy"><figcaption>通配符</figcaption></figure><blockquote><p>代码实现</p></blockquote><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">苹果是绿色的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">橙子是橙色的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">香蕉是黄色的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">乌鸦是黑色的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> temp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">findall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;.色&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, content):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(temp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="重复匹配任意次数" tabindex="-1"><a class="header-anchor" href="#重复匹配任意次数"><span>重复匹配任意次数 - <code>*</code></span></a></h5><p><code>*</code>表示匹配子表达式任意次，包括 0 次。</p><p>在以下文本中匹配逗号后面的字符串内容，包含逗号本身：文本中的逗号为中文。</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>苹果，是绿色的</span></span>
<span class="line"><span>橙子，是橙色的</span></span>
<span class="line"><span>香蕉，是黄色的</span></span>
<span class="line"><span>乌鸦，是黑色的</span></span>
<span class="line"><span>猴子，</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表达式语法：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>，.*</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>效果如下：</p><figure><img src="`+t+`" alt="匹配字符任意次" tabindex="0" loading="lazy"><figcaption>匹配字符任意次</figcaption></figure><p>大家注意最后一行，猴子逗号后面没有其它字符了，但是*表示可以匹配 0 次， 所以表达式也是成立的。</p><blockquote><p>代码实现</p></blockquote><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">苹果，是绿色的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">橙子，是橙色的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">香蕉，是黄色的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">乌鸦，是黑色的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">猴子，</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> temp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">findall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;，.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, content):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(temp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.*</code>在正则表达式中非常常见，表示匹配任意字符任意次数。当然，<code>*</code>前面不一定就是<code>.</code>，也可以是其他字符。</p><figure><img src="`+h+'" alt="*号的使用" tabindex="0" loading="lazy"><figcaption>*号的使用</figcaption></figure><h5 id="重复匹配一次或多次" tabindex="-1"><a class="header-anchor" href="#重复匹配一次或多次"><span>重复匹配一次或多次 - <code>+</code></span></a></h5><p><code>+</code>表示匹配前面的子表达式一次或多次，不包括 0 次。</p><p>以之前的文本为例，匹配所有逗号的内容，包含逗号。但是如果逗号后没有内容则不匹配。</p><figure><img src="'+p+'" alt="重复匹配多次" tabindex="0" loading="lazy"><figcaption>重复匹配多次</figcaption></figure><p>表达式语法：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>，.+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="匹配-0-次或者-1-次" tabindex="-1"><a class="header-anchor" href="#匹配-0-次或者-1-次"><span>匹配 0 次或者 1 次 - <code>?</code></span></a></h5><p>以之前的文本为例，在文本中匹配每行逗号后面的 1 个字符，也包含逗号本身。</p><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>表达式语法：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>，.?</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>最后一行也可以正常匹配，原因是<code>?</code>表示可以匹配 1 次或者 0 次。</p><h5 id="匹配执行次数" tabindex="-1"><a class="header-anchor" href="#匹配执行次数"><span>匹配执行次数 - <code>{}</code></span></a></h5><p><code>{}</code>表示指定字符匹配的次数。</p><p>测试文本：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>红彤彤，绿油油，黑乎乎，绿油油油油</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>表达式<code>油{3}</code>就表示匹配连续的<code>油</code>字 3 次</li><li>表达式<code>油{3,4}</code>就表示匹配连续的<code>油</code>字至少 3 次，至多 4 次</li></ul><figure><img src="'+d+`" alt="指定匹配次数" tabindex="0" loading="lazy"><figcaption>指定匹配次数</figcaption></figure><h5 id="贪婪模式与非贪婪模式" tabindex="-1"><a class="header-anchor" href="#贪婪模式与非贪婪模式"><span>贪婪模式与非贪婪模式</span></a></h5><p>将以下字符串中的所有<code>html</code>标签提取出来：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Title&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据之前所学习的内容，我们可以使用<code>&lt;.*&gt;</code>将标签进行匹配，代码如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">source </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&lt;html&gt;&lt;head&gt;&lt;title&gt;Title&lt;/title&gt;&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> temp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">findall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;&lt;.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&gt;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, source):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(temp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果如下：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;html&gt;&lt;head&gt;&lt;title&gt;Title&lt;/title&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当前结果将不是标签的数据也提取出来了。</p><blockquote><p>解决方式</p></blockquote><p>在正则表达式中，<code>*</code>、<code>+</code>等元字符都是贪婪的。使用它们时会尽可能匹配多的内容，所以在<code>&lt;.*&gt;</code>表达式中的<code>*</code>一直匹配到了字符串最后的<code>&lt;/title&gt;</code>中的<code>e</code>，解决这个问题的方式就是将贪婪模式更改为非贪婪模式。在<code>*</code>后加上<code>?</code>。</p><p>语法如下：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;.*?&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>代码实现：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">source </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&lt;html&gt;&lt;head&gt;&lt;title&gt;Title&lt;/title&gt;&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> temp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">findall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;&lt;.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*?</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&gt;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, source):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(temp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="元字符转义" tabindex="-1"><a class="header-anchor" href="#元字符转义"><span>元字符转义</span></a></h5><p>反斜杠<code>\\</code>在正则表达式中有多重用途，例如在以下文本中搜索所有<code>.</code>之前的字符串，也包含<code>.</code>本身。</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>苹果.是绿色的</span></span>
<span class="line"><span>橙子.是橙色的</span></span>
<span class="line"><span>香蕉.是黄色的</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果我们将正则表达式写成：<code>.*.</code>，肯定是不正确的，因为<code>.</code>是一个元字符，具有特殊含义。直接出现在正则表达式中不能表示<code>.</code>这个字符本身。</p><p>解决方式：使用<code>\\</code>转义。</p><p><code>Python</code>程序如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">苹果.是绿色的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">橙子.是橙色的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">香蕉.是黄色的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> temp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">findall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, content):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(temp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="匹配某种字符类型" tabindex="-1"><a class="header-anchor" href="#匹配某种字符类型"><span>匹配某种字符类型</span></a></h5><p>在反斜杠后链接一些字符可以表示某种类型的一个字符。</p><ul><li><p><code>\\d</code>匹配 0-9 之间任意一个数字字符，等价于表达式：<code>[0-9]</code></p></li><li><p><code>\\D</code>匹配任意一个不是 0-9 之间的数字字符，等价于表达式：<code> [^0-9]</code></p></li><li><p><code>\\s</code>匹配任意一个空白字符，包括空格、<code>tab</code>、换行符等，等价于表达式：<code>[\\t\\n\\r\\f\\v]</code></p></li><li><p><code>\\S</code>匹配任意一个非空白字符，等价于表达式：<code>[^\\t\\n\\r\\f\\v]</code></p></li><li><p><code>\\w</code>匹配任意一个文字字符，包括大小写字母、数字、下划线，等价于表达式：<code>[a-zA-Z0-9_]</code></p></li><li><p><code>\\W</code>匹配任意一个非文字字符，等价于表达式：<code>[^a-zA-Z0-9_]</code></p></li></ul><p>反斜杠也可以用在方括号里面，比如<code>[\\s,.]</code>表示匹配 ： 任何空白字符， 或者逗号，或者点</p><h5 id="使用中括号匹配指定字符范围" tabindex="-1"><a class="header-anchor" href="#使用中括号匹配指定字符范围"><span>使用中括号匹配指定字符范围 - <code>[]</code></span></a></h5><p>中括号表示要匹配的几个指定字符之一。</p><p><code>[abc]</code>可以匹配<code>a、b、c</code>中任意一个字符，等价于：<code>[a-c]</code></p><p><code>[a-c]</code>中间的<code>-</code>表示范围从<code>a</code>到<code>c</code>，如果你想匹配所有的小写字母，可以使用：<code>[a-z]</code></p><p>一些元字符在中括号内会失去特殊含义，和普通字符没有区别。例如：<code>[akm.]</code>，在当前正则中的<code>.</code>只是一个普通字符而已，并不表示匹配任意字符。</p><p>如果在中括号中使用<code>^</code>则表示<strong>非</strong>，不匹配在中括号中的字符集合。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;a1b2c3d4e5&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> temp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">findall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">[</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">^</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">]</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, content):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(temp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="起始结尾位置与单行多行模式" tabindex="-1"><a class="header-anchor" href="#起始结尾位置与单行多行模式"><span>起始结尾位置与单行多行模式</span></a></h5><blockquote><p>起始位置</p></blockquote><p><code>^</code>表示匹配文本的<strong>开头</strong>位置。在正则表达式中可以设置<strong>单行模式</strong>与<strong>多行模式</strong>。</p><ul><li>单行模式：表示匹配整个文本的开头位置</li><li>多行模式：表示匹配文本每行的开头位置</li></ul><p>在下面的文本中，每行最前面的数字表示水果的编号，最后的数字表示价格。</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>001-苹果价格-60</span></span>
<span class="line"><span>002-橙子价格-70</span></span>
<span class="line"><span>003-香蕉价格-80</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果我们要提取所有的水果编号，用这样的正则表达式：<code>^\\d+</code></p><p>代码示例：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;&#39;001-苹果价格-60</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">002-橙子价格-70</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">003-香蕉价格-80</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> temp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">findall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;^\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, content, re.M):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(temp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在以上代码的<code>find_all</code>方法中，第三个参数<code>re.M</code>表示使用多行模式。</p><p>运行结果如下：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>001</span></span>
<span class="line"><span>002</span></span>
<span class="line"><span>003</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果去掉第三个参数则运行结果如下：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>001</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>结尾位置</p></blockquote><p><code>$</code>表示匹配文本的<code>结尾</code>位置。</p><p>将之前文本中所有的水果价格提取出来，可以使用这样的表达式：<code>\\d+$</code></p><p>注意：在结尾匹配也有单行与多行的区别。</p><p>代码示例：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;&#39;001-苹果价格-60</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">002-橙子价格-70</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">003-香蕉价格-80</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> temp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">findall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">$&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, content, re.M):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(temp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果如下：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>60</span></span>
<span class="line"><span>70</span></span>
<span class="line"><span>80</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果将<code>re.MULTILINE</code>去掉则只能匹配最后一行。</p><p>结果如下：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>80</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>单行模式下，<code>$</code>只会匹配整个文本的结束位置。</p><h5 id="匹配指定多个字符中的其中之一" tabindex="-1"><a class="header-anchor" href="#匹配指定多个字符中的其中之一"><span>匹配指定多个字符中的其中之一 - <code>|</code></span></a></h5><p>竖线表示匹配其中之一，示例如下：</p><figure><img src="`+r+`" alt="匹配指定字符的其中之一" tabindex="0" loading="lazy"><figcaption>匹配指定字符的其中之一</figcaption></figure><p>特别要注意的是竖线在正则表达式的优先级是最低的，这就意味着竖线隔开的部分是一个整体。比如<code>绿色|橙</code>表示要匹配是 <code>绿色</code>或者<code>橙</code> ，而不是<code>绿色</code>或者<code>绿橙</code>。</p><h5 id="分组" tabindex="-1"><a class="header-anchor" href="#分组"><span>分组 - <code>()</code></span></a></h5><p>小括号是正则表达式的组选择。<code>组</code>就是把正则表达式匹配的内容中的一部分标记为某个组。</p><p>我们可以在正则表达式中标记多个<code>组</code>。</p><p>使用之前的文本案例，从以下文本中提取逗号前面的字符串，包含逗号。</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>苹果，苹果是绿色的</span></span>
<span class="line"><span>橙子，橙子是橙色的</span></span>
<span class="line"><span>香蕉，香蕉是黄色的</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上案例可以使用：<code>^.*，</code>来完成，但是如果要求不要包含逗号呢？可能有同学会写成：<code>^.*</code>来完成，这种写法无法满足需求，因为逗号是结尾特征。</p><blockquote><p>解决方式</p></blockquote><p>使用小括号分组，并去除逗号。</p><p>语法示例：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>^(.*)，</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>Python</code>代码如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;&#39;苹果，苹果是绿色的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">橙子，橙子是橙色的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">香蕉，香蕉是黄色的&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> temp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">findall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;^</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">，&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, content, re.M):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(temp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>分组</code>还可以多次使用，例如在以下文本中提取每个人的名字以及对应的手机号：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>张三，手机号码15945678901</span></span>
<span class="line"><span>李四，手机号码13945677701</span></span>
<span class="line"><span>王二，手机号码13845666901</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;&#39;张三，手机号码15945678901</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">李四，手机号码13945677701</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">王二，手机号码13845666901&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> temp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">findall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;^</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">，.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">{11}</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, content, re.M):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(temp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当有多个分组的时候可以使用<code>(?P&lt;分组名称&gt;...)</code>这样的格式给每个分组命名，这样做的好处是方便之后的代码提取每个指定分组中的内容。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;&#39;张三，手机号码15945678901</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">李四，手机号码13945677701</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">王二，手机号码13845666901&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> temp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">finditer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;^</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">?P&lt;user_name&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">，.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">?P&lt;mobile&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">{11}</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, content, re.M):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(temp.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;user_name&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), temp.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;mobile&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="dotall参数-标记允许点号匹配所有字符" tabindex="-1"><a class="header-anchor" href="#dotall参数-标记允许点号匹配所有字符"><span><code>DOTALL</code>参数 - 标记允许点号匹配所有字符</span></a></h5><p><code>DOTALL</code>标记允许点号匹配所有字符，包括换行符。这对于需要处理包含换行符的文本时非常有用，因为默认情况下点号无法匹配换行符。</p><blockquote><p>需求解决</p></blockquote><p>在以下<code>html</code>代码中提取所有的职位名称：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;el&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Python开发工程师&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;南京&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1.5-2万/月&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;el&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;java开发工程师&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;苏州&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1.5-2/月&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果直接使用表达式<code>class=\\&quot;t1\\&quot;&gt;.*?&lt;a&gt;(.*?)&lt;/a&gt;</code>会发现匹配不上，因为<code>t1</code>和<code>&lt;a&gt;</code>之间有两个空行，这时就需要<code>.</code>匹配所有字符了。</p><p>代码示例：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;div class=&quot;el&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &lt;p class=&quot;t1&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &lt;span&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                &lt;a&gt;Python开发工程师&lt;/a&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &lt;/span&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &lt;/p&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &lt;span class=&quot;t2&quot;&gt;南京&lt;/span&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &lt;span class=&quot;t3&quot;&gt;1.5-2万/月&lt;/span&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;/div&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;div class=&quot;el&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &lt;p class=&quot;t1&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &lt;span&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                &lt;a&gt;java开发工程师&lt;/a&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &lt;/span&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">		&lt;/p&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &lt;span class=&quot;t2&quot;&gt;苏州&lt;/span&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &lt;span class=&quot;t3&quot;&gt;1.5-2/月&lt;/span&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;/div&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> temp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">findall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;class=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">t1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&gt;.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*?</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&lt;a&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*?</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&lt;/a&gt;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, content, re.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">DOTALL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(temp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-常用字符串处理方式" tabindex="-1"><a class="header-anchor" href="#_4-常用字符串处理方式"><span>4.常用字符串处理方式</span></a></h3><h5 id="正则字符串切割" tabindex="-1"><a class="header-anchor" href="#正则字符串切割"><span>正则字符串切割</span></a></h5><blockquote><p><code>Python</code>中的字符串切割</p></blockquote><p>字符串对象中的<code>split</code>方法只适用于简单的字符串切割，有时你需要更加灵活的字符串切割。</p><p>在以下字符串中提取武将名称：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">names </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;关羽; 张飞, 赵云,马超, 黄忠  李逵&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们发现这些名字之间有些是<code>;</code>分割，有些是<code>,</code>分割，还有一些是空格分割，并且空格数量是不一致的。这时使用字符串对象中的分割方法不好处理。</p><blockquote><p>正则表达式中的<code>split</code>方法</p></blockquote><p>使用<code>re.split</code>方法完成字符串提取：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">names </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;关羽; 张飞, 赵云,   马超, 黄忠  李逵&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">name_list </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">;,</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\s</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">]</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\s</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">*</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, names)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(name_list)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="字符串替换" tabindex="-1"><a class="header-anchor" href="#字符串替换"><span>字符串替换</span></a></h5><blockquote><p>匹配模式替换</p></blockquote><p>字符串对象中的<code>replace</code>方法只适应于简单的替换，有时你需要更加灵活的字符串替换。</p><p>比如我们需要在以下文本中找到所有以<code>av</code>开头的所有链接：<code>\\avxxxxxx\\</code>，然后将这些字符串替换为<code>/cn345677/</code>。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">html_obj </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">下面是这学期要学习的课程：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;a href=&#39;https://www.bilibili.com/video/av66771949/?p=1&#39; target=&#39;_blank&#39;&gt;点击这里，边看视频讲解，边学习以下内容&lt;/a&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">这节讲的是牛顿第2运动定律</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;a href=&#39;https://www.bilibili.com/video/av46349552/?p=125&#39; target=&#39;_blank&#39;&gt;点击这里，边看视频讲解，边学习以下内容&lt;/a&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">这节讲的是毕达哥拉斯公式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;a href=&#39;https://www.bilibili.com/video/av90571967/?p=33&#39; target=&#39;_blank&#39;&gt;点击这里，边看视频讲解，边学习以下内容&lt;/a&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">这节讲的是切割磁力线</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&#39;&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>被替换的内容不是固定的，所以无法使用字符串中的<code>replace</code>方法。</p><blockquote><p>使用正则表达式中的<code>sub</code>方法</p></blockquote><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">html_obj </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">下面是这学期要学习的课程：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;a href=&#39;https://www.bilibili.com/video/av66771949/?p=1&#39; target=&#39;_blank&#39;&gt;点击这里，边看视频讲解，边学习以下内容&lt;/a&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">这节讲的是牛顿第2运动定律</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;a href=&#39;https://www.bilibili.com/video/av46349552/?p=125&#39; target=&#39;_blank&#39;&gt;点击这里，边看视频讲解，边学习以下内容&lt;/a&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">这节讲的是毕达哥拉斯公式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;a href=&#39;https://www.bilibili.com/video/av90571967/?p=33&#39; target=&#39;_blank&#39;&gt;点击这里，边看视频讲解，边学习以下内容&lt;/a&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">这节讲的是切割磁力线</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">sub</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;/av\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/cn345677/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, html_obj)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sub</code>方法是正则表达式中的替换方法，替换的内容是用正则表达式匹配出来的内容。</p><p>当前第一个参数<code>r&#39;/av\\d+/&#39;</code>是一个正则表达式，表示以<code>/av</code>开头，后面是一串数字，在以<code>/</code>结尾的这种特征的字符串是需要被替换的。</p><p>第二个参数<code>/cn345677/</code>是替换的结果。</p><p>第三个参数是原来的字符串。</p><blockquote><p>指定替换函数</p></blockquote><p>在刚刚的例子中，我们用来替换的是一个固定的字符串<code>/cn345677/</code>。如果我们要求替换的内容是原来的数字加上数字<code>6</code>的结果，例如：<code>/av66771949/</code>替换为<code>/av66771955/</code>。如何实现？</p><p>这种更加复杂的替换，我们可以把<code>sub</code>中的第二个参数指定为一个函数，该函数的返回值就是用来替换的字符串。</p><p>代码如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">names </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">下面是这学期要学习的课程：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;a href=&#39;https://www.bilibili.com/video/av66771949/?p=1&#39; target=&#39;_blank&#39;&gt;点击这里，边看视频讲解，边学习以下内容&lt;/a&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">这节讲的是牛顿第2运动定律</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;a href=&#39;https://www.bilibili.com/video/av46349552/?p=125&#39; target=&#39;_blank&#39;&gt;点击这里，边看视频讲解，边学习以下内容&lt;/a&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">这节讲的是毕达哥拉斯公式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;a href=&#39;https://www.bilibili.com/video/av90571967/?p=33&#39; target=&#39;_blank&#39;&gt;点击这里，边看视频讲解，边学习以下内容&lt;/a&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">这节讲的是切割磁力线</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 替换函数，参数是Match对象</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sub_func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">match</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    # Match对象的group(0)返回的是整个匹配上的字符串，</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    src </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> match.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    # Match对象的group(1)返回的是第一个group分组的内容</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    number </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(match.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    dest </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/av</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">number</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">src</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 替换为 </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">dest</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    # 返回值就是最终替换的字符串</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dest</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">sub</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;/av</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, sub_func, names)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,173),A=[g];function o(v,y){return a(),i("div",null,A)}const u=s(c,[["render",o],["__file","4.正则表达式的详细教程.html.vue"]]),m=JSON.parse('{"path":"/python/2.%E7%88%AC%E8%99%AB/1.%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/4.%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B.html","title":"4.正则表达式的详细教程","lang":"zh-CN","frontmatter":{"title":"4.正则表达式的详细教程","footer":false,"prev":false,"next":false,"description":"1.正则表达式的作用 案例演示 先给大家看一个例子，在以下文本中存储了一些职位信息： 将文本中的薪资数据提取出来，只要包含数字就可以。 代码实现 通过以上代码就可以轻松的将文本中的数字提取出来，在find_all方法中的字符串其实就是正则表达式。观察当前方法返回的数据我们发现是一个列表。 2.正则表达式在线验证工具 工具链接地址：https://reg...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/python/2.%E7%88%AC%E8%99%AB/1.%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/4.%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"4.正则表达式的详细教程"}],["meta",{"property":"og:description","content":"1.正则表达式的作用 案例演示 先给大家看一个例子，在以下文本中存储了一些职位信息： 将文本中的薪资数据提取出来，只要包含数字就可以。 代码实现 通过以上代码就可以轻松的将文本中的数字提取出来，在find_all方法中的字符串其实就是正则表达式。观察当前方法返回的数据我们发现是一个列表。 2.正则表达式在线验证工具 工具链接地址：https://reg..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"YL"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4.正则表达式的详细教程\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"YL\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"1.正则表达式的作用","slug":"_1-正则表达式的作用","link":"#_1-正则表达式的作用","children":[]},{"level":3,"title":"2.正则表达式在线验证工具","slug":"_2-正则表达式在线验证工具","link":"#_2-正则表达式在线验证工具","children":[]},{"level":3,"title":"3.常见语法","slug":"_3-常见语法","link":"#_3-常见语法","children":[]},{"level":3,"title":"4.常用字符串处理方式","slug":"_4-常用字符串处理方式","link":"#_4-常用字符串处理方式","children":[]}],"git":{},"readingTime":{"minutes":14.98,"words":4494},"filePathRelative":"python/2.爬虫/1.爬虫基础/4.正则表达式的详细教程.md","autoDesc":true}');export{u as comp,m as data};

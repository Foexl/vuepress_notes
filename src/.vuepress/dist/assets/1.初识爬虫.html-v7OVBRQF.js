import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o,a as s}from"./app-CFFpmDzR.js";const t="/assets/%E6%96%97%E9%B1%BC%E5%9B%BE%E7%89%87%E5%9C%B0%E5%9D%80%E5%88%86%E6%9E%90-BSWFYcMu.png",a="/assets/%E6%8A%96%E9%9F%B3%E8%A7%86%E9%A2%91%E5%9C%B0%E5%9D%80%E5%88%86%E6%9E%90-CJOmhIbA.png",c="/assets/%E6%B7%98%E5%AE%9D%E5%95%86%E5%93%81%E8%AF%84%E8%AE%BA%E5%88%86%E6%9E%90-BW7189rB.png",d="/assets/%E7%BD%91%E7%BB%9C%E8%B0%83%E8%AF%95%E5%8A%A9%E6%89%8B%E5%8F%91%E9%80%81HTTP%E5%8D%8F%E8%AE%AE-Dz3QYvaB.png",l={},n=s('<h3 id="_1-爬虫相关概念" tabindex="-1"><a class="header-anchor" href="#_1-爬虫相关概念"><span>1.爬虫相关概念</span></a></h3><h5 id="什么是爬虫" tabindex="-1"><a class="header-anchor" href="#什么是爬虫"><span>什么是爬虫</span></a></h5><p>网络爬虫（又被称为网页蜘蛛，网络机器人）就是模拟浏览器发送网络请求，接收请求响应，一种按照一定的规则，自动地抓取互联网信息的程序。</p><p>原则上，<strong>只要是浏览器(客户端)能做的事情，爬虫都能够做</strong></p><h5 id="如何获取爬虫程序" tabindex="-1"><a class="header-anchor" href="#如何获取爬虫程序"><span>如何获取爬虫程序</span></a></h5><ul><li>下载其他公司开发的通用爬虫(八爪鱼)</li><li>开发人员自己编写</li></ul><h5 id="区别" tabindex="-1"><a class="header-anchor" href="#区别"><span>区别</span></a></h5><blockquote><p>通用爬虫</p></blockquote><p>可以提取大多数网站的数据，但是对于网站中某些特殊数据的提取方式没有实现</p><blockquote><p>自定义爬虫</p></blockquote><p>可以针对某一种网站自行开发符合要求的爬虫</p><h5 id="开发语言" tabindex="-1"><a class="header-anchor" href="#开发语言"><span>开发语言</span></a></h5><p>只要能够发送<code>HTTP(S)</code>请求的任何编程语言都是可以完成爬虫程序的，例如：<code>C++</code>、<code>java</code>、<code>php</code>、<code>JavaScript</code>等等</p><p>但是论爬虫开发效率一般都指的是<code>python</code>语言</p><h5 id="爬虫分类" tabindex="-1"><a class="header-anchor" href="#爬虫分类"><span>爬虫分类</span></a></h5><p>根据抓取网站的数量不同，大致将爬虫分为两种：</p><ul><li>通用爬虫：通常指搜索引擎的爬虫，例如：https://www.baidu.com</li><li>聚焦爬虫：针对特定网站的爬虫</li></ul><h3 id="_2-爬虫流程以及案例演示" tabindex="-1"><a class="header-anchor" href="#_2-爬虫流程以及案例演示"><span>2.爬虫流程以及案例演示</span></a></h3><h5 id="聚焦爬虫代码执行流程" tabindex="-1"><a class="header-anchor" href="#聚焦爬虫代码执行流程"><span>聚焦爬虫代码执行流程</span></a></h5><img src="https://doc.itprojects.cn/0001.zhishi/python.0013.spiderbase/assets/聚焦爬虫的工作流程.png" style="zoom:50%;"><blockquote><p>流程说明</p></blockquote><ol><li>向起始地址发送请求，并获取响应</li><li>对响应结果进行数据提取</li><li>如果获取的数据是新的网站地址则继续发送请求并获取响应</li><li>如果获取的数据为页面需要的数据则完成数据保存</li></ol><h5 id="案例-斗鱼图片" tabindex="-1"><a class="header-anchor" href="#案例-斗鱼图片"><span>案例：斗鱼图片</span></a></h5><blockquote><p>目标</p></blockquote><ul><li>练习分析素材并提取素材地址的能力</li><li>手动下载素材</li></ul><blockquote><p>过程记录</p></blockquote><p>斗鱼-颜值<code>URL</code>：https://www.douyu.com/g_yz</p><p>分析出图片的<code>URL</code>：https://rpic.douyucdn.cn/live-cover/roomCover/2023/09/02/003a4fd060deae496bab910340b6a165_big.png</p><figure><img src="'+t+'" alt="斗鱼图片地址分析" tabindex="0" loading="lazy"><figcaption>斗鱼图片地址分析</figcaption></figure><p>在一般的网站中，图片地址都是在<code>html</code>代码的<code>img</code>标签中的，例如百度图片。但是斗鱼网站进过分析之后我们发现，图片并不在<code>html</code>代码当中。像这种网站的资源都是动态加载过来的，所以需要善于利用浏览器开发者工具进行网络抓包。基于抓包我们发现当前图片等动态信息位于：https://www.douyu.com/wgapi/ordnc/live/web/room/yzList/1</p><p>当前<code>api</code>返回的数据为<code>json</code>数据，在<code>json</code>数据中包含了主播封面图片地址。</p><h5 id="案例-抖音视频" tabindex="-1"><a class="header-anchor" href="#案例-抖音视频"><span>案例：抖音视频</span></a></h5><blockquote><p>要求：获取抖音原视频地址</p><p>分析地址：https://www.douyin.com/channel/300206</p></blockquote><figure><img src="'+a+'" alt="斗鱼图片地址分析" tabindex="0" loading="lazy"><figcaption>斗鱼图片地址分析</figcaption></figure><p>根据抓包分析出当前视频的<code>api</code>接口并返回<code>json</code>数据。在<code>json</code>数据中包含视频的播放地址，位于当前<code>api</code>的<code>url_list</code>节点。</p><h5 id="案例-淘宝评论" tabindex="-1"><a class="header-anchor" href="#案例-淘宝评论"><span>案例：淘宝评论</span></a></h5><blockquote><p>要求：获取商家评论信息</p><p>分析地址：https://item.taobao.com/item.htm?spm=a21bo.jianhua.201876.10.5af92a89LhtPtE&amp;id=620925796742&amp;scm=1007.40986.276750.0&amp;pvid=a2473adf-6c80-4e9d-a1e8-84c2253bbed9</p></blockquote><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>根据浏览器抓包工具获取对应的评论<code>api</code>并获取响应的<code>json</code>数据。</p><h3 id="_3-http与https协议" tabindex="-1"><a class="header-anchor" href="#_3-http与https协议"><span>3.<code>HTTP</code>与<code>HTTPS</code>协议</span></a></h3><p>目前大部分网站是基于<code>HTTP</code>与<code>HTTPS</code>进行网络交互的，在爬虫程序中也是发送网络协议来获取对应的网站信息，所以还是有必要了解网络协议。</p><h5 id="http与https相关概念" tabindex="-1"><a class="header-anchor" href="#http与https相关概念"><span><code>HTTP</code>与<code>HTTPS</code>相关概念</span></a></h5><ul><li><code>HTTP</code><ul><li>超文本传输协议</li><li>默认端口号：80</li></ul></li><li><code>HTTPS</code><ul><li><code>HTTP</code> + <code>SSL</code>(安全套接字层)，即带有安全套接字层的超本文传输协议</li><li>默认端口号：443</li></ul></li></ul><p><code>HTTPS</code>比<code>HTTP</code>更安全，但是性能更低。</p><h5 id="理解http协议" tabindex="-1"><a class="header-anchor" href="#理解http协议"><span>理解<code>HTTP</code>协议</span></a></h5><p><code>HTTP</code>协议使用了<code>TCP</code>协议，接下来我们使用<code>网络调试助手</code>软件发送<code>HTTP</code>协议并携带<code>hello world</code>数据到浏览器。</p><p>软件下载地址：https://soft.3dmgame.com/down/213757.html</p><figure><img src="'+d+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>操作步骤</p><ol><li>设置网络调试助手为<code>TCP Server</code>端</li><li>浏览器链接网络调试助手</li><li>发送<code>HTTP</code>协议到浏览器并携带数据</li><li>断开连接，浏览器显示相应内容</li></ol></blockquote><h5 id="http协议的重要信息" tabindex="-1"><a class="header-anchor" href="#http协议的重要信息"><span><code>HTTP</code>协议的重要信息</span></a></h5><p>在以上案例中，我们想要给浏览器发送信息并显示，就必须要带上<code>HTTP</code>协议。<code>HTTP</code>协议中有一部分数据对爬虫程序来说非常重要。分别是请求头与响应头。</p><blockquote><p>常见的请求头参数</p></blockquote><ol><li><code>Host</code> (主机和端口号)</li><li><code>Connection</code> (链接类型)</li><li><code>Upgrade-Insecure-Requests</code> (升级为<code>HTTPS</code>请求)</li><li><code>User-Agent </code>(浏览器名称)</li><li><code>Accept</code> (传输文件类型)</li><li><code>Referer</code> (页面跳转处)</li><li><code>Accept-Encoding</code>（文件编解码格式）</li><li><code>Cookie </code>（<code>Cookie</code>信息）</li><li><code>x-requested-with :XMLHttpRequest</code> (表示该请求是<code>Ajax</code>异步请求)</li></ol><blockquote><p>响应头参数</p></blockquote><p><code>Set-Cookie</code> （对方服务器设置<code>cookie</code>到用户浏览器的缓存）</p><blockquote><p>响应状态码</p></blockquote><ul><li><code>200</code>：成功</li><li><code>302</code>：临时转移至新的<code>url</code>(一般会用<code>GET</code>，例如原本是<code>POST</code>则新的请求则是<code>GET</code>)</li><li><code>307</code>：临时转移至新的<code>url</code>(原本是<code>POST</code>则新的请求依然是<code>POST</code>)</li><li><code>403</code>：无请求权限</li><li><code>404</code>：找不到该页面</li><li><code>500</code>：服务器内部错误</li><li><code>503</code>：服务不可用，一般是被反爬</li></ul><h5 id="浏览器发送http请求过程" tabindex="-1"><a class="header-anchor" href="#浏览器发送http请求过程"><span>浏览器发送<code>HTTP</code>请求过程</span></a></h5><figure><img src="https://doc.itprojects.cn/0001.zhishi/python.0013.spiderbase/assets/http发送的过程.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol><li>客户端发送网站域名到<code>DNS</code>服务器</li><li><code>DNS</code>服务器返回<code>IP</code>地址到客户端</li><li>客户端根据返回的<code>IP</code>地址访问网站后端服务器并请求网站资源</li><li>网站后端服务器返回对应页面资源</li></ol><h3 id="_4-robots协议" tabindex="-1"><a class="header-anchor" href="#_4-robots协议"><span>4.<code>Robots</code>协议</span></a></h3><p>网站通过<code>Robots</code>协议告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取，但它仅仅是互联网中的约定而已，可以不用遵守。例如：https://www.taobao.com/robots.txt</p><p>在后期的<code>Scrapy</code>框架学习中，需要手动关闭<code>Robots</code>协议，现阶段了解即可。</p><h3 id="_5-爬虫相关的谷歌浏览器插件" tabindex="-1"><a class="header-anchor" href="#_5-爬虫相关的谷歌浏览器插件"><span>5.爬虫相关的谷歌浏览器插件</span></a></h3><ul><li><strong>XPath Helper</strong></li><li><strong>Web Scraper</strong></li><li><strong>Toggle JavaScript</strong></li><li><strong>User-Agent Switcher for Chrome</strong></li><li><strong>EditThisCookie</strong></li><li><strong>SwitchySharp</strong></li></ul><p><strong>无法链接外网的同学通过国内浏览器插件网站下载：https://extfans.com/</strong></p><h3 id="_6-网站请求测试软件" tabindex="-1"><a class="header-anchor" href="#_6-网站请求测试软件"><span>6.网站请求测试软件</span></a></h3><blockquote><p>PostMan:https://www.postman.com/downloads</p></blockquote><blockquote><p>ApiPost:https://www.apipost.cn/download.html</p></blockquote><h3 id="_7-编码" tabindex="-1"><a class="header-anchor" href="#_7-编码"><span>7.编码</span></a></h3><p>字符是各种文字和符号的总称，包括国家文字、标点符号、图形符号、数字等等。</p><p>字符集是多个字符的集合，字符集包括：<code>ASCII</code>、<code>GB2312</code>、<code>Unicode</code>等等。<code>UTF-8</code>是<code>Unicode</code>的实现方式之一</p><blockquote><p><code>Python3</code>中的字符串</p></blockquote><ul><li><code>str</code>：<code>unicode</code>的呈现形式</li><li><code>bytes</code>：字节类型，互联网上的数据都已以二进制的方式传输的</li></ul><blockquote><p><code>str</code>与<code>bytes</code>类型的互相转换</p></blockquote><ul><li><p><code>str</code>使用<code>encode</code>方法转换为<code>bytes</code></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">str_code </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;abc&#39;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(str_code))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">byte_code </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> str_code.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">encode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(byte_code))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>bytes</code>通过<code>decode</code>转换为<code>str</code></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">byte_code </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;abc&#39;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(byte_code))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">str_code </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> byte_code.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">decode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(str_code))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>注意：编码方式必须和解码方式一样，否则就会出现乱码问题。例如使用<code>utf-8</code>编码，那么就必须使用<code>utf-8</code>解码。</p>`,77),p=[n];function h(r,k){return o(),i("div",null,p)}const b=e(l,[["render",h],["__file","1.初识爬虫.html.vue"]]),B=JSON.parse('{"path":"/python/2.%E7%88%AC%E8%99%AB/1.%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/1.%E5%88%9D%E8%AF%86%E7%88%AC%E8%99%AB.html","title":"1.初识爬虫","lang":"zh-CN","frontmatter":{"title":"1.初识爬虫","footer":false,"prev":false,"next":false,"description":"1.爬虫相关概念 什么是爬虫 网络爬虫（又被称为网页蜘蛛，网络机器人）就是模拟浏览器发送网络请求，接收请求响应，一种按照一定的规则，自动地抓取互联网信息的程序。 原则上，只要是浏览器(客户端)能做的事情，爬虫都能够做 如何获取爬虫程序 下载其他公司开发的通用爬虫(八爪鱼) 开发人员自己编写 区别 通用爬虫 可以提取大多数网站的数据，但是对于网站中某些特...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/python/2.%E7%88%AC%E8%99%AB/1.%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/1.%E5%88%9D%E8%AF%86%E7%88%AC%E8%99%AB.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"1.初识爬虫"}],["meta",{"property":"og:description","content":"1.爬虫相关概念 什么是爬虫 网络爬虫（又被称为网页蜘蛛，网络机器人）就是模拟浏览器发送网络请求，接收请求响应，一种按照一定的规则，自动地抓取互联网信息的程序。 原则上，只要是浏览器(客户端)能做的事情，爬虫都能够做 如何获取爬虫程序 下载其他公司开发的通用爬虫(八爪鱼) 开发人员自己编写 区别 通用爬虫 可以提取大多数网站的数据，但是对于网站中某些特..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://doc.itprojects.cn/0001.zhishi/python.0013.spiderbase/assets/http发送的过程.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"YL"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1.初识爬虫\\",\\"image\\":[\\"https://doc.itprojects.cn/0001.zhishi/python.0013.spiderbase/assets/http发送的过程.png\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"YL\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"1.爬虫相关概念","slug":"_1-爬虫相关概念","link":"#_1-爬虫相关概念","children":[]},{"level":3,"title":"2.爬虫流程以及案例演示","slug":"_2-爬虫流程以及案例演示","link":"#_2-爬虫流程以及案例演示","children":[]},{"level":3,"title":"3.HTTP与HTTPS协议","slug":"_3-http与https协议","link":"#_3-http与https协议","children":[]},{"level":3,"title":"4.Robots协议","slug":"_4-robots协议","link":"#_4-robots协议","children":[]},{"level":3,"title":"5.爬虫相关的谷歌浏览器插件","slug":"_5-爬虫相关的谷歌浏览器插件","link":"#_5-爬虫相关的谷歌浏览器插件","children":[]},{"level":3,"title":"6.网站请求测试软件","slug":"_6-网站请求测试软件","link":"#_6-网站请求测试软件","children":[]},{"level":3,"title":"7.编码","slug":"_7-编码","link":"#_7-编码","children":[]}],"git":{},"readingTime":{"minutes":5.87,"words":1761},"filePathRelative":"python/2.爬虫/1.爬虫基础/1.初识爬虫.md","autoDesc":true}');export{b as comp,B as data};
